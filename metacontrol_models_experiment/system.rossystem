RosSystem { Name 'system'
	RosComponents ( 
	ComponentInterface { name move_base NameSpace move_base 
	RosPublishers { 
		RosPublisher "move_base/global_costmap/inflater_layer/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/inflater_layer/parameter_updates" } , 
		RosPublisher "move_base/NavfnROS/plan" { ns move_base RefPublisher "move_base.move_base.move_base.NavfnROS/plan" } , 
		RosPublisher "move_base/local_costmap/inflater_layer/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/inflater_layer/parameter_updates" } , 
		RosPublisher "move_base/local_costmap/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/parameter_descriptions" } , 
		RosPublisher "move_base/global_costmap/footprint" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/footprint" } , 
		RosPublisher "move_base/global_costmap/obstacles_layer/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/obstacles_layer/parameter_updates" } , 
		RosPublisher "move_base/TrajectoryPlannerROS/local_plan" { ns move_base RefPublisher "move_base.move_base.move_base.TrajectoryPlannerROS/local_plan" } , 
		RosPublisher "move_base/current_goal" { ns move_base RefPublisher "move_base.move_base.move_base.current_goal" } , 
		RosPublisher "move_base/global_costmap/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/parameter_descriptions" } , 
		RosPublisher "move_base/local_costmap/costmap" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/costmap" } , 
		RosPublisher "move_base/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.parameter_updates" } , 
		RosPublisher "move_base/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.parameter_descriptions" } , 
		RosPublisher "move_base/local_costmap/inflater_layer/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/inflater_layer/parameter_descriptions" } ,
		RosPublisher "move_base/local_costmap/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/parameter_updates" } , 
		RosPublisher "/cmd_vel" { ns move_base RefPublisher "move_base.move_base.move_base./cmd_vel" } , 
		RosPublisher "move_base/global_costmap/costmap" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/costmap" } ,
		RosPublisher "move_base/TrajectoryPlannerROS/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.TrajectoryPlannerROS/parameter_descriptions" } ,
		RosPublisher "move_base/local_costmap/costmap_updates" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/costmap_updates" } ,
		RosPublisher "move_base/goal" { ns move_base RefPublisher "move_base.move_base.move_base.goal" } ,
		RosPublisher "move_base/TrajectoryPlannerROS/cost_cloud" { ns move_base RefPublisher "move_base.move_base.move_base.TrajectoryPlannerROS/cost_cloud" } ,
		RosPublisher "move_base/local_costmap/obstacles_layer/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/obstacles_layer/parameter_descriptions" } ,
		RosPublisher "move_base/global_costmap/static_layer/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/static_layer/parameter_descriptions" } ,
		RosPublisher "move_base/global_costmap/obstacles_layer/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/obstacles_layer/parameter_descriptions" } ,
		RosPublisher "move_base/global_costmap/inflater_layer/parameter_descriptions" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/inflater_layer/parameter_descriptions" } ,
		RosPublisher "move_base/TrajectoryPlannerROS/global_plan" { ns move_base RefPublisher "move_base.move_base.move_base.TrajectoryPlannerROS/global_plan" } ,
		RosPublisher "move_base/global_costmap/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/parameter_updates" } ,
		RosPublisher "move_base/TrajectoryPlannerROS/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.TrajectoryPlannerROS/parameter_updates" } ,
		RosPublisher "move_base/local_costmap/footprint" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/footprint" } ,
		RosPublisher "move_base/global_costmap/costmap_updates" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/costmap_updates" } ,
		RosPublisher "move_base/local_costmap/obstacles_layer/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.local_costmap/obstacles_layer/parameter_updates" } ,
		RosPublisher "move_base/global_costmap/static_layer/parameter_updates" { ns move_base RefPublisher "move_base.move_base.move_base.global_costmap/static_layer/parameter_updates" }}
	RosSubscribers { 
		RosSubscriber "/front/scan" { ns move_base RefSubscriber "move_base.move_base.move_base./front/scan" } , 
		RosSubscriber "move_base//move_base_simple/goal" { ns move_base RefSubscriber "move_base.move_base.move_base./move_base_simple/goal" } , 
		RosSubscriber "move_base/local_costmap/footprint" { ns move_base RefSubscriber "move_base.move_base.move_base.local_costmap/footprint" } , 
		RosSubscriber "/map" { ns move_base RefSubscriber "move_base.move_base.move_base./map" } , 
		RosSubscriber "move_base/global_costmap/footprint" { ns move_base RefSubscriber "move_base.move_base.move_base.global_costmap/footprint" } , 
		RosSubscriber "/odometry/filtered" { ns move_base RefSubscriber "move_base.move_base.move_base./odometry/filtered" }}
	RosSrvServers { 
		RosServiceServer "move_base/TrajectoryPlannerROS/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.TrajectoryPlannerROS/set_parameters"} , 
		RosServiceServer"move_base/global_costmap/obstacles_layer/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.global_costmap/obstacles_layer/set_parameters"} , 
		RosServiceServer"move_base/local_costmap/obstacles_layer/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.local_costmap/obstacles_layer/set_parameters"} , 
		RosServiceServer"move_base/global_costmap/inflater_layer/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.global_costmap/inflater_layer/set_parameters"} , 
		RosServiceServer"move_base/local_costmap/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.local_costmap/set_parameters"} , 
		RosServiceServer"move_base/clear_costmaps" { ns move_base RefServer "move_base.move_base.move_base.clear_costmaps"} , 
		RosServiceServer"move_base/make_plan" { ns move_base RefServer "move_base.move_base.move_base.make_plan"} , 
		RosServiceServer"move_base/global_costmap/static_layer/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.global_costmap/static_layer/set_parameters"} , 
		RosServiceServer"move_base/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.set_parameters"} , 
		RosServiceServer"move_base/local_costmap/inflater_layer/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.local_costmap/inflater_layer/set_parameters"} , 
		RosServiceServer"move_base/NavfnROS/make_plan" { ns move_base RefServer "move_base.move_base.move_base.NavfnROS/make_plan"} , 
		RosServiceServer"move_base/global_costmap/set_parameters" { ns move_base RefServer "move_base.move_base.move_base.global_costmap/set_parameters" } } 
	RosActionServers {
		RosActionServer "/move_base" { ns move_base RefServer "move_base.move_base.move_base.move_base" } } 
	RosParameters { 
		RosParameter  "move_base/controller_frequency" { ns move_base RefParameter "move_base.move_base.move_base.controller_frequency"} , 
		RosParameter "move_base/planner_frequency" { ns move_base RefParameter "move_base.move_base.move_base.planner_frequency"} , 
		RosParameter "move_base/acc_lim_x" { ns move_base RefParameter "move_base.move_base.move_base.acc_lim_x"} , 
		RosParameter "move_base/max_vel_x" { ns move_base RefParameter "move_base.move_base.move_base.max_vel_x"} , 
		RosParameter "move_base/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.obstacle_range"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/max_obstacle_height"} , 
		RosParameter "move_base/planner_patience" { ns move_base RefParameter "move_base.move_base.move_base.planner_patience"} , 
		RosParameter "move_base/conservative_reset/reset_distance" { ns move_base RefParameter "move_base.move_base.move_base.conservative_reset/reset_distance"} , 
		RosParameter "move_base/TrajectoryPlannerROS/yaw_goal_tolerance" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/yaw_goal_tolerance"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/combination_method" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/combination_method"} , 
		RosParameter "move_base/global_costmap/footprint" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/footprint"} , 
		RosParameter "move_base/local_costmap/origin_x" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/origin_x"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/enabled" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/enabled"} , 
		RosParameter "move_base/TrajectoryPlannerROS/dwa" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/dwa"} , 
		RosParameter "move_base/conservative_reset_dist" { ns move_base RefParameter "move_base.move_base.move_base.conservative_reset_dist"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/footprint_clearing_enabled" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/footprint_clearing_enabled"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/raytrace_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/max_vel_x" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/max_vel_x"} , 
		RosParameter "move_base/max_planning_retries" { ns move_base RefParameter "move_base.move_base.move_base.max_planning_retries"} , 
		RosParameter "move_base/shutdown_costmaps" { ns move_base RefParameter "move_base.move_base.move_base.shutdown_costmaps"} , 
		RosParameter "move_base/TrajectoryPlannerROS/controller_frequency" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/controller_frequency"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/observation_sources" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/observation_sources"} , 
		RosParameter "move_base/restore_defaults" { ns move_base RefParameter "move_base.move_base.move_base.restore_defaults"} , 
		RosParameter "move_base/base_global_planner" { ns move_base RefParameter "move_base.move_base.move_base.base_global_planner"} , 
		RosParameter "move_base/global_costmap/meter_scoring" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/meter_scoring"} , 
		RosParameter "move_base/TrajectoryPlannerROS/holonomic_robot" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/holonomic_robot"} , 
		RosParameter "move_base/local_costmap/transform_tolerance" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/transform_tolerance"} , 
		RosParameter "move_base/global_costmap/footprint_padding" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/footprint_padding"} , 
		RosParameter "move_base/TrajectoryPlannerROS/vx_samples" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/vx_samples"} , 
		RosParameter "move_base/global_costmap/inflater_layer/cost_scaling_factor" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/inflater_layer/cost_scaling_factor"} , 
		RosParameter "move_base/local_costmap/width" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/width"} , 
		RosParameter "move_base/local_costmap/inflater_layer/inflate_unknown" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/inflater_layer/inflate_unknown"} , 
		RosParameter "move_base/TrajectoryPlannerROS/y_vels" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/y_vels"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/data_type" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/data_type"} , 
		RosParameter "move_base/global_costmap/height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/height"} , 
		RosParameter "move_base/local_costmap/inflater_layer/cost_scaling_factor" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/inflater_layer/cost_scaling_factor"} , 
		RosParameter "move_base/TrajectoryPlannerROS/meter_scoring" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/meter_scoring"} , 
		RosParameter "move_base/global_costmap/update_frequency" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/update_frequency"} , 
		RosParameter "move_base/local_costmap/inflater_layer/inflation_radius" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/inflater_layer/inflation_radius"} , 
		RosParameter "move_base/local_costmap/inflater_layer/enabled" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/inflater_layer/enabled"} , 
		RosParameter "move_base/local_costmap/publish_voxel_map" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/publish_voxel_map"} , 
		RosParameter "move_base/local_costmap/origin_z" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/origin_z"} , 
		RosParameter "move_base/global_costmap/static_layer/enabled" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/static_layer/enabled"} , 
		RosParameter "move_base/TrajectoryPlannerROS/escape_reset_theta" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/escape_reset_theta"} , 
		RosParameter "move_base/local_costmap/static_map" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/static_map"} , 
		RosParameter "move_base/TrajectoryPlannerROS/sim_granularity" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/sim_granularity"} , 
		RosParameter "move_base/local_costmap/origin_y" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/origin_y"} , 
		RosParameter "move_base/TrajectoryPlannerROS/goal_distance_bias" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/goal_distance_bias"} , 
		RosParameter "move_base/local_costmap/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/raytrace_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/max_vel_y" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/max_vel_y"} , 
		RosParameter "move_base/local_costmap/robot_base_frame" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/robot_base_frame"} , 
		RosParameter "move_base/local_costmap/footprint" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/footprint"} , 
		RosParameter "move_base/local_costmap/map_type" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/map_type"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/obstacle_range"} , 
		RosParameter "move_base/global_costmap/z_resolution" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/z_resolution"} , 
		RosParameter "move_base/TrajectoryPlannerROS/occdist_scale" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/occdist_scale"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/marking" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/marking"} , 
		RosParameter "move_base/oscillation_distance" { ns move_base RefParameter "move_base.move_base.move_base.oscillation_distance"} , 
		RosParameter "move_base/local_costmap/z_voxels" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/z_voxels"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/min_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/min_obstacle_height"} , 
		RosParameter "move_base/TrajectoryPlannerROS/min_vel_theta" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/min_vel_theta"} , 
		RosParameter "move_base/TrajectoryPlannerROS/acc_lim_y" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/acc_lim_y"} , 
		RosParameter "move_base/local_costmap/robot_radius" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/robot_radius"} , 
		RosParameter "move_base/TrajectoryPlannerROS/publish_cost_grid_pc" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/publish_cost_grid_pc"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/clearing" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/clearing"} , 
		RosParameter "move_base/TrajectoryPlannerROS/gdist_scale" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/gdist_scale"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/topic" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/topic"} , 
		RosParameter "move_base/TrajectoryPlannerROS/angular_sim_granularity" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/angular_sim_granularity"} , 
		RosParameter "move_base/local_costmap/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacle_range"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/sensor_frame" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/sensor_frame"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/raytrace_range"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/max_obstacle_height"} , 
		RosParameter "move_base/local_costmap/global_frame" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/global_frame"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/marking" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/marking"} , 
		RosParameter "move_base/local_costmap/rolling_window" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/rolling_window"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/clearing" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/clearing"} , 
		RosParameter "move_base/TrajectoryPlannerROS/vtheta_samples" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/vtheta_samples"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/min_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/min_obstacle_height"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/data_type" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/data_type"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/topic" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/topic"} , 
		RosParameter "move_base/clearing_rotation_allowed" { ns move_base RefParameter "move_base.move_base.move_base.clearing_rotation_allowed"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/raytrace_range"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/raytrace_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/xy_goal_tolerance" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/xy_goal_tolerance"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/max_obstacle_height"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/combination_method" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/combination_method"} , 
		RosParameter "move_base/TrajectoryPlannerROS/escape_vel" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/escape_vel"} , 
		RosParameter "move_base/local_costmap/meter_scoring" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/meter_scoring"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/enabled" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/enabled"} , 
		RosParameter "move_base/global_costmap/static_map" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/static_map"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/footprint_clearing_enabled" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/footprint_clearing_enabled"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/raytrace_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/acc_lim_x" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/acc_lim_x"} , 
		RosParameter "move_base/aggressive_reset/reset_distance" { ns move_base RefParameter "move_base.move_base.move_base.aggressive_reset/reset_distance"} , 
		RosParameter "move_base/TrajectoryPlannerROS/simple_attractor" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/simple_attractor"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/observation_sources" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/observation_sources"} , 
		RosParameter "move_base/TrajectoryPlannerROS/path_distance_bias" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/path_distance_bias"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/max_obstacle_height"} , 
		RosParameter "move_base/oscillation_timeout" { ns move_base RefParameter "move_base.move_base.move_base.oscillation_timeout"} , 
		RosParameter "move_base/global_costmap/transform_tolerance" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/transform_tolerance"} , 
		RosParameter "move_base/TrajectoryPlannerROS/sim_time" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/sim_time"} , 
		RosParameter "move_base/TrajectoryPlannerROS/pdist_scale" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/pdist_scale"} , 
		RosParameter "move_base/recovery_behavior_enabled" { ns move_base RefParameter "move_base.move_base.move_base.recovery_behavior_enabled"} , 
		RosParameter "move_base/global_costmap/width" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/width"} , 
		RosParameter "move_base/local_costmap/footprint_padding" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/footprint_padding"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/max_obstacle_height"} , 
		RosParameter "move_base/controller_patience" { ns move_base RefParameter "move_base.move_base.move_base.controller_patience"} , 
		RosParameter "move_base/TrajectoryPlannerROS/max_vel_theta" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/max_vel_theta"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/point_cloud/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/point_cloud/obstacle_range"} , 
		RosParameter "move_base/local_costmap/height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/height"} , 
		RosParameter "move_base/global_costmap/publish_frequency" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/publish_frequency"} , 
		RosParameter "move_base/TrajectoryPlannerROS/min_vel_y" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/min_vel_y"} , 
		RosParameter "move_base/TrajectoryPlannerROS/heading_scoring" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/heading_scoring"} , 
		RosParameter "move_base/global_costmap/inflater_layer/inflation_radius" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/inflater_layer/inflation_radius"} , 
		RosParameter "move_base/local_costmap/update_frequency" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/update_frequency"} , 
		RosParameter "move_base/global_costmap/inflater_layer/enabled" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/inflater_layer/enabled"} , 
		RosParameter "move_base/global_costmap/publish_voxel_map" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/publish_voxel_map"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/marking" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/marking"} , 
		RosParameter "move_base/global_costmap/origin_z" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/origin_z"} , 
		RosParameter "move_base/global_costmap/obstacles_layer/scan/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacles_layer/scan/obstacle_range"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/obstacle_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/heading_lookahead" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/heading_lookahead"} , 
		RosParameter "move_base/TrajectoryPlannerROS/min_in_place_vel_theta" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/min_in_place_vel_theta"} , 
		RosParameter "move_base/global_costmap/origin_y" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/origin_y"} , 
		RosParameter "move_base/TrajectoryPlannerROS/latch_xy_goal_tolerance" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/latch_xy_goal_tolerance"} , 
		RosParameter "move_base/TrajectoryPlannerROS/restore_defaults" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/restore_defaults"} , 
		RosParameter "move_base/global_costmap/origin_x" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/origin_x"} , 
		RosParameter "move_base/base_local_planner" { ns move_base RefParameter "move_base.move_base.move_base.base_local_planner"} , 
		RosParameter "move_base/local_costmap/plugins" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/plugins"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/obstacle_range"} , 
		RosParameter "move_base/local_costmap/resolution" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/resolution"} , 
		RosParameter "move_base/TrajectoryPlannerROS/min_vel_x" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/min_vel_x"} , 
		RosParameter "move_base/local_costmap/z_resolution" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/z_resolution"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/data_type" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/data_type"} , 
		RosParameter "move_base/global_costmap/z_voxels" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/z_voxels"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/min_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/min_obstacle_height"} , 
		RosParameter "move_base/global_costmap/robot_radius" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/robot_radius"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/clearing" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/clearing"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/topic" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/topic"} , 
		RosParameter "move_base/global_costmap/robot_base_frame" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/robot_base_frame"} , 
		RosParameter "move_base/global_costmap/plugins" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/plugins"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/sensor_frame" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/sensor_frame"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/raytrace_range"} , 
		RosParameter "move_base/global_costmap/raytrace_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/raytrace_range"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/scan/max_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/scan/max_obstacle_height"} , 
		RosParameter "move_base/TrajectoryPlannerROS/oscillation_reset_dist" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/oscillation_reset_dist"} , 
		RosParameter "move_base/global_costmap/global_frame" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/global_frame"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/marking" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/marking"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/obstacle_range"} , 
		RosParameter "move_base/global_costmap/rolling_window" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/rolling_window"} , 
		RosParameter "move_base/TrajectoryPlannerROS/escape_reset_dist" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/escape_reset_dist"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/data_type" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/data_type"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/min_obstacle_height" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/min_obstacle_height"} , 
		RosParameter "move_base/local_costmap/publish_frequency" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/publish_frequency"} , 
		RosParameter "move_base/global_costmap/resolution" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/resolution"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/clearing" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/clearing"} , 
		RosParameter "move_base/global_costmap/map_type" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/map_type"} , 
		RosParameter "move_base/TrajectoryPlannerROS/acc_lim_theta" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/acc_lim_theta"} , 
		RosParameter "move_base/global_costmap/obstacle_range" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/obstacle_range"} , 
		RosParameter "move_base/TrajectoryPlannerROS/heading_scoring_timestep" { ns move_base RefParameter "move_base.move_base.move_base.TrajectoryPlannerROS/heading_scoring_timestep"} , 
		RosParameter "move_base/local_costmap/obstacles_layer/point_cloud/topic" { ns move_base RefParameter "move_base.move_base.move_base.local_costmap/obstacles_layer/point_cloud/topic"} , 
		RosParameter "move_base/global_costmap/inflater_layer/inflate_unknown" { ns move_base RefParameter "move_base.move_base.move_base.global_costmap/inflater_layer/inflate_unknown" } } } ,
	ComponentInterface { name battery_load_control 
		RosPublishers { 
		RosPublisher "/power_load" { RefPublisher "metacontrol_sim.battery_load_control_node.battery_load_control_node./power_load" } }
	RosSubscribers { 
		RosSubscriber "/odom" { RefSubscriber "metacontrol_sim.battery_load_control_node.battery_load_control_node./odom"} , 
		RosSubscriber"/cmd_vel" { RefSubscriber "metacontrol_sim.battery_load_control_node.battery_load_control_node./cmd_vel"} , 
		RosSubscriber"/imu/data" { RefSubscriber "metacontrol_sim.battery_load_control_node.battery_load_control_node./imu/data" } } 
	RosParameters {
		RosParameter min_power_load { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.min_power_load"} , 
		RosParameter max_power_load { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.max_power_load"} , 
		RosParameter odom_topic { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.odom_topic"} , 
		RosParameter imu_topic { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.imu_topic"} , 
		RosParameter power_load_topic { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.power_load_topic"} , 
		RosParameter additional_consumption { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.additional_consumption"} , 
		RosParameter cmd_vel_topic { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.cmd_vel_topic"} , 
		RosParameter controller_frequency { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.controller_frequency"} , 
		RosParameter const_acceleration { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.const_acceleration"} , 
		RosParameter const_frequency { RefParameter "metacontrol_sim.battery_load_control_node.battery_load_control_node.const_frequency" } } } , 
	ComponentInterface { name fake_localization 
	RosPublishers { 
		RosPublisher "/amcl_pose" { RefPublisher "fake_localization.fake_localization.fake_localization./amcl_pose"} , 
		RosPublisher"/particlecloud" { RefPublisher "fake_localization.fake_localization.fake_localization./particlecloud" } } 
	RosSubscribers { 
		RosSubscriber "/ground_truth/state" { RefSubscriber "fake_localization.fake_localization.fake_localization./ground_truth/state"} , 
		RosSubscriber"/initialpose" { RefSubscriber "fake_localization.fake_localization.fake_localization./initialpose" } } 
	RosParameters { 
		RosParameter delta_yaw { RefParameter "fake_localization.fake_localization.fake_localization.delta_yaw"} , 
		RosParameter global_frame_id { RefParameter "fake_localization.fake_localization.fake_localization.global_frame_id"} , 
		RosParameter base_frame_id { RefParameter "fake_localization.fake_localization.fake_localization.base_frame_id"} , 
		RosParameter delta_x { RefParameter "fake_localization.fake_localization.fake_localization.delta_x"} , 
		RosParameter delta_y { RefParameter "fake_localization.fake_localization.fake_localization.delta_y" } } } , 
	ComponentInterface { name laser_filter NameSpace laser_filter 
	RosPublishers { 
		RosPublisher "laser_filter/shadows/parameter_descriptions" { ns laser_filter RefPublisher "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/parameter_descriptions"} , 
		RosPublisher "/scan_filtered" { ns laser_filter RefPublisher "laser_filters.scan_to_scan_filter_chain.laser_filter./scan_filtered"} , 
		RosPublisher "laser_filter/shadows/parameter_updates" { ns laser_filter RefPublisher "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/parameter_updates" } } 
	RosSubscribers { 
		RosSubscriber "/front/scan" { ns laser_filter RefSubscriber "laser_filters.scan_to_scan_filter_chain.laser_filter./front/scan" } } 
	RosSrvServers { 
		RosServiceServer "laser_filter/shadows/set_parameters" { ns laser_filter RefServer "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/set_parameters" } } 
	RosParameters { 
		RosParameter  "laser_filter/scan_filter_chain" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.scan_filter_chain"} , 
		RosParameter "laser_filter/shadows/min_angle" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/min_angle"} , 
		RosParameter "laser_filter/shadows/remove_shadow_start_point" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/remove_shadow_start_point"} , 
		RosParameter "laser_filter/shadows/neighbors" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/neighbors"} , 
		RosParameter "laser_filter/shadows/max_angle" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/max_angle"} , 
		RosParameter "laser_filter/shadows/window" { ns laser_filter RefParameter "laser_filters.scan_to_scan_filter_chain.laser_filter.shadows/window" } } } , 
	ComponentInterface { name safety_distance_publisher 
	RosPublishers { 
		RosPublisher "/d_obstacle" { RefPublisher "metacontrol_sim.safety_distance_publisher.safety_distance_publisher_node./d_obstacle"} , 
		RosPublisher "/d_inflation" { RefPublisher "metacontrol_sim.safety_distance_publisher.safety_distance_publisher_node./d_inflation" } } 
	RosSubscribers { 
		RosSubscriber "/scan_filtered" { RefSubscriber "metacontrol_sim.safety_distance_publisher.safety_distance_publisher_node./scan_filtered" } } 
	RosParameters { 
		RosParameter  "/safety_distance_publisher_node/scan_filter_chain" { RefParameter "metacontrol_sim.safety_distance_publisher.safety_distance_publisher_node./safety_distance_publisher_node/scan_filter_chain" } } },
	ComponentInterface { name imu NameSpace imu 
	RosPublishers { 
		RosPublisher "imu/data/accel/parameter_descriptions" { ns imu RefPublisher "imu_sim./imu./gazebo.data/accel/parameter_descriptions" },
		RosPublisher "imu/data/bias" { ns imu RefPublisher "imu_sim./imu./gazebo.data/bias" },
		RosPublisher "imu/data" { ns imu RefPublisher "imu_sim./imu./gazebo.data" },
		RosPublisher "imu/data/accel/parameter_updates" { ns imu RefPublisher "imu_sim./imu./gazebo.data/accel/parameter_updates" },
		RosPublisher "imu/data/rate/parameter_descriptions" { ns imu RefPublisher "imu_sim./imu./gazebo.data/rate/parameter_descriptions" },
		RosPublisher "imu/data/yaw/parameter_updates" { ns imu RefPublisher "imu_sim./imu./gazebo.data/yaw/parameter_updates" },
		RosPublisher "imu/data/yaw/parameter_descriptions" { ns imu RefPublisher "imu_sim./imu./gazebo.data/yaw/parameter_descriptions" } } 
	RosSrvServers { 
		RosServiceServer "imu/data/calibrate" { ns imu RefServer "imu_sim./imu./gazebo.data/calibrate" },
		RosServiceServer "imu/data/yaw/set_parameters" { ns imu RefServer "imu_sim./imu./gazebo.data/yaw/set_parameters" },
		RosServiceServer "imu/data/rate/set_parameters" { ns imu RefServer "imu_sim./imu./gazebo.data/rate/set_parameters" },
		RosServiceServer "imu/data/accel/set_parameters" { ns imu RefServer "imu_sim./imu./gazebo.data/accel/set_parameters" } } 
	RosParameters { 
		RosParameter "imu/data/rate/offset" { ns imu RefParameter "imu_sim./imu./gazebo.data/rate/offset" },
		RosParameter "imu/data/accel/scale_error" { ns imu RefParameter "imu_sim./imu./gazebo.data/accel/scale_error" },
		RosParameter "imu/data/yaw/drift_frequency" { ns imu RefParameter "imu_sim./imu./gazebo.data/yaw/drift_frequency" },
		RosParameter "imu/data/yaw/gaussian_noise" { ns imu RefParameter "imu_sim./imu./gazebo.data/yaw/gaussian_noise" },
		RosParameter "imu/data/rate/drift" { ns imu RefParameter "imu_sim./imu./gazebo.data/rate/drift" },
		RosParameter "imu/data/accel/gaussian_noise" { ns imu RefParameter "imu_sim./imu./gazebo.data/accel/gaussian_noise" },
		RosParameter "imu/data/rate/gaussian_noise" { ns imu RefParameter "imu_sim./imu./gazebo.data/rate/gaussian_noise" },
		RosParameter "imu/data/accel/drift" { ns imu RefParameter "imu_sim./imu./gazebo.data/accel/drift" },
		RosParameter "imu/data/accel/drift_frequency" { ns imu RefParameter "imu_sim./imu./gazebo.data/accel/drift_frequency" },
		RosParameter "imu/data/yaw/drift" { ns imu RefParameter "imu_sim./imu./gazebo.data/yaw/drift" },
		RosParameter "imu/data/yaw/offset" { ns imu RefParameter "imu_sim./imu./gazebo.data/yaw/offset" },
		RosParameter "imu/data/rate/scale_error" { ns imu RefParameter "imu_sim./imu./gazebo.data/rate/scale_error" },
		RosParameter "imu/data/rate/drift_frequency" { ns imu RefParameter "imu_sim./imu./gazebo.data/rate/drift_frequency" },
		RosParameter "imu/data/accel/offset" { ns imu RefParameter "imu_sim./imu./gazebo.data/accel/offset" },
		RosParameter "imu/data/yaw/scale_error" { ns imu RefParameter "imu_sim./imu./gazebo.data/yaw/scale_error" } } } , 
	ComponentInterface { name base_sim 
	RosPublishers { 
		RosPublisher "/gazebo_ros_control/pid_gains/front_left_wheel/parameter_updates" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/front_left_wheel/parameter_updates" },
		RosPublisher "/gazebo_ros_control/pid_gains/rear_left_wheel/parameter_updates" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_left_wheel/parameter_updates" },
		RosPublisher "/joint_states" { RefPublisher "base_sim./base_sim./gazebo./joint_states" },
		RosPublisher "/gazebo_ros_control/pid_gains/rear_right_wheel/parameter_updates" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_right_wheel/parameter_updates" },
		RosPublisher "/odom" { RefPublisher "base_sim./base_sim./gazebo./odom" },
		RosPublisher "/gazebo_ros_control/pid_gains/front_right_wheel/parameter_descriptions" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/front_right_wheel/parameter_descriptions" },
		RosPublisher "/gazebo_ros_control/pid_gains/front_left_wheel/parameter_descriptions" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/front_left_wheel/parameter_descriptions" },
		RosPublisher "/gazebo_ros_control/pid_gains/rear_left_wheel/parameter_descriptions" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_left_wheel/parameter_descriptions" },
		RosPublisher "/gazebo_ros_control/pid_gains/rear_right_wheel/parameter_descriptions" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_right_wheel/parameter_descriptions" },
		RosPublisher "/gazebo_ros_control/pid_gains/front_right_wheel/parameter_updates" { RefPublisher "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/front_right_wheel/parameter_updates" } } 
	RosSubscribers { 
		RosSubscriber "/cmd_vel" { RefSubscriber "base_sim./base_sim./gazebo./cmd_vel" } } 
	RosSrvServers { 
		RosServiceServer "/gazebo_ros_control/pid_gains/front_left_wheel/set_parameters" { RefServer "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/front_left_wheel/set_parameters" },
		RosServiceServer "/controller_manager/reload_controller_libraries" { RefServer "base_sim./base_sim./gazebo./controller_manager/reload_controller_libraries" },
		RosServiceServer "/controller_manager/list_controllers" { RefServer "base_sim./base_sim./gazebo./controller_manager/list_controllers" },
		RosServiceServer "/controller_manager/load_controller" { RefServer "base_sim./base_sim./gazebo./controller_manager/load_controller" },
		RosServiceServer "/controller_manager/list_controller_types" { RefServer "base_sim./base_sim./gazebo./controller_manager/list_controller_types" },
		RosServiceServer "/controller_manager/unload_controller" { RefServer "base_sim./base_sim./gazebo./controller_manager/unload_controller" },
		RosServiceServer "/controller_manager/switch_controller" { RefServer "base_sim./base_sim./gazebo./controller_manager/switch_controller" },
		RosServiceServer "/gazebo_ros_control/pid_gains/rear_right_wheel/set_parameters" { RefServer "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_right_wheel/set_parameters" },
		RosServiceServer "/gazebo_ros_control/pid_gains/rear_left_wheel/set_parameters" { RefServer "base_sim./base_sim./gazebo./gazebo_ros_control/pid_gains/rear_left_wheel/set_parameters" } } } ) 

	TopicConnections { TopicConnection "/cmd_vel" { From ( "move_base./cmd_vel" ) To ( "battery_load_control./cmd_vel" ) } , TopicConnection "/cmd_vel" { From ( "move_base./cmd_vel" ) To ( "base_sim./cmd_vel" ) } , TopicConnection "/scan_filtered" { From ( "laser_filter./scan_filtered" ) To ( "safety_distance_publisher./scan_filtered" ) } , TopicConnection "/odom" { From ( "base_sim./odom" ) To ( "battery_load_control./odom" ) } } 
	Parameters {
		Parameter { name qa_safety type Double},
		Parameter { name qa_energy type Double}} 
}
